on:
  push:
    branches:
      - main
      - develop
      - "hotfix/**"
      - "feature/**"
      - "release/**"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonarqube --info
      - uses: actions/upload-artifact@v2
        with:
          path: build/libs/*.jar

      - uses: docker/login-action@v1
        with:
          registry: ghcr.io/opgg-hackthon
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get branch name
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr /# -)" >> $GITHUB_ENV
      - name: Push container to registry
        run: ./gradlew jib -Djib.to.tags=${{ env.BRANCH_NAME }}

      - uses: actions/cache@v2
        with:
          key: openapi
          path: ./src/main/resources/static/openapi.yml

  deploy-ecs-fargate:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - uses: actions/checkout@v2
      - uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: .github/aws/task-definition.json
          cluster: cluster-gameflix-swagger
          service: service-gameflix-backend

  deploy-document:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/cache@v2
        with:
          key: openapi
          path: ./src/main/resources/static/openapi.yml
      - uses: Legion2/swagger-ui-action@v1
        with:
          output: dist
          spec-file: ./src/main/resources/static/openapi.yml
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist
          force_orphan: true
